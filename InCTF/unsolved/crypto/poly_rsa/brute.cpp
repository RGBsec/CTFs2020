#include <iostream>
#include <thread>
#include <vector>
#include <utility>

using namespace std;

typedef long long ll;

const ll P = 2470567871;
const ll RANGE = 150000000;

const ll coef[256] = {1809685811, 1045363399, 1073721716, 2148341337, 2277377050, 2414019676, 2435360770, 2013445952, 1567687877, 1808400208, 1850096904, 712045611, 401889502, 1199066291, 2450124113, 1946675573, 302196939, 1091690302, 1083466865, 2014147362, 1167857934, 1013582418, 853968854, 613659517, 1364177470, 2039153142, 1337342428, 2081988029, 718926726, 461430959, 1308900201, 2234027582, 1592921228, 1204601190, 894088738, 2202042708, 1898813986, 477713059, 2467433889, 1800239647, 418389643, 459426544, 1369087493, 1833258462, 1536178591, 1688297180, 1245956917, 471431762, 1259753202, 397953653, 861871574, 1255707235, 521467961, 900005615, 957146826, 1778819295, 1757273231, 1713852330, 1911643955, 1142068056, 604983755, 637721571, 1108646500, 12380707, 2393168828, 277530014, 482243092, 1057597610, 717796715, 1929704306, 328372190, 2444570340, 1205814501, 170647828, 2393709429, 1993836978, 1089091449, 1755205142, 567322310, 107235697, 2197572728, 109369793, 2082285292, 197089583, 1756497351, 1504315277, 437801940, 1742475067, 2400233482, 981463824, 862153635, 186272117, 1538610725, 552728308, 499973742, 909607400, 1549538476, 320515821, 889221741, 2458706380, 453598910, 68969853, 471555401, 954952187, 798151427, 1792110161, 328165402, 1369194845, 1107871854, 915121681, 678813029, 722376028, 298497455, 223551915, 2141702861, 184370704, 185609624, 2166920790, 493362403, 1148806816, 532432639, 215965300, 2019090583, 1991529213, 1175930901, 2188452501, 1551409650, 1989860861, 311679750, 1206118526, 713986937, 589034062, 1895285286, 1603993606, 275861976, 1237943942, 476121126, 597191613, 2284832499, 938551278, 1722266624, 494063408, 573548790, 1265566902, 2003844061, 1865541316, 1656568780, 593980163, 1032257735, 1005427673, 2454799241, 80717392, 306686020, 961000788, 571922874, 2339380314, 2250967824, 1001726783, 376257986, 1126046031, 573072954, 1848717750, 167037165, 1976911493, 1795774455, 1267042416, 2247371104, 2008674144, 946530449, 1191445903, 1379768234, 1400145206, 783321123, 1303477598, 320751753, 1302531891, 1740451894, 1351845267, 2208320155, 2216678027, 75339882, 658171402, 1095083181, 91863906, 657373752, 1414769298, 647124526, 697816284, 1044263540, 2357717379, 1105227173, 1453466049, 1450622685, 2342921569, 1665066191, 2147341770, 1297768962, 271875267, 1302258424, 1323964787, 2372929383, 1322682658, 1921772796, 85924125, 797486240, 1845826007, 1500078813, 2015416361, 127723603, 475412928, 1904225023, 2139903463, 1882320336, 766641243, 254306901, 340677494, 1144578716, 296985783, 899788156, 2327926559, 28569139, 1067203343, 1664522302, 930231465, 1824442929, 1166227650, 966493372, 1984443642, 516444143, 902171938, 434434839, 53338886, 19615265, 235611028, 1499291590, 1526075137, 843708018, 828941376, 517715639, 2391647981, 873379233, 2407367106, 1509168990, 849699356, 1015587392, 1264717357, 657116276, 1226179520, 1378353578, 762279735, 820889786, 2378103997, 1573324635, 1270867914, 1432733708, 1932231392};

ll f(ll x) {
    ll res = 0;
    ll p = 1;
    for (int i=0; i<256; i++) {
        res = (res + (coef[i] * p) % P) % P;
        p = (p * x) % P;
    }
    return res;
}

const ll PROGRESS = (1 << 20) - 1;

void check(ll& ans, const ll& start, const ll& finish) {
    for (ll x=start; x<finish; x++) {
        ll res = f(x);
        if ((x & PROGRESS) == 0) {
            cout << x << endl;
        }
        if ((res % P) == 0) {
            cout << "ANSWER: " << x << endl;
            ans = x;
        }
    }
}

int main() {
    assert(f(0) == 1809685811);
    assert(f(1) == 1248045681);
    assert(f(P-1) == 1936718451);
    assert(f(0) == f(P));
    assert(f(2) == f(P+2));
    assert(f(143) == f(P+143));
    vector<thread> threads;

    ll ans = -1;
    for (ll start=0; start<P; start+=RANGE) {
        threads.push_back(thread(check, ref(ans), start, min(P, start+RANGE)));        
    }
    cout << "There are " << threads.size() << " threads running" << endl;

    for (int i=0; i<threads.size(); i++) {
        threads[i].join();
        cout << "finished thread " << i << endl;
    }

    cout << "ans: " << ans << endl;
    
    return 0;
}
