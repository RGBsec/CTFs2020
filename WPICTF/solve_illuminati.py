from sympy import mod_inverse
from utils.rsa.rsa_util import find_n_root

c1 = 6746817722171454633846600939793823327196687037391501564260730074525114867274280666784211200615734824494377089787035006146494774604906142645570686831364437586132115946935703182802299498461090000518730842870194571950121218964876685476108077848008125948404941923681593344383038949727732067394753855488816580476965613577063196950471815914511144233012770308765418773487854326170597111212238390110659315254496807453915749829009808663382931719644077982678597494269699349729392077025436243539337325768191561939960373932220823401974750830255851940048097522456480118383589746712966511867245896222912308618780356149823836301988

c2 = 3550089372565400352415931671502332634569805139370684204034604401027515307051498406646786074553286660918864248359651701053256474150615064901244658126695331661080891587950500993769551447781627833243583983779570508381174336679025732486500039546858688539447964567008787184362535316644240992343210181292102122915146316550821828970426407774927628448741603116073335170777010918407198905834711431919095437696244186986871316058792513661960258361032322392057642342647674807701010427814981088420643060618652425568542736810235904771320334344751538449382125403309574746206441626189949911026716802781468318990804924508828631418550

c3 = 6998952552671115642319109448737691877749532249902415597096117390454588048042905132902724048284521885667256812266718730384715153891376589154646126086424179906632283015611937573945150595821617615562370008373509658363307816844756757915231940229002260777782057434418893504350419355591352058371270560295213326515523565084089943090311204895216235451700225123245044974954044888756142986392821841347231011619716855150299776149055589713382544999960851787960414591918285753789690732414941788098055453369987036066928181748866086236082469976650924980844460330939365148333915421859057756888592158280026917011807884221460121652240

n1 = 21939147590581954242131893557689750173730181114330873782062274456630281986233643990882568426690149971468987847436717513764939861105600249325682418749886588739440853385485272501856860578476795830603738468829294920737586209822299603185425324611481798231193950636987017718955070420091525231666894903436050998112803225822333684113551754209802262129292376015861410644289380376439390552627189657966103965089679163295591136464541998227543058082734503570960156783196006833967361311083486266118899788620317372054292861892020849652213277431575285275801196626852675579752895079650118836892859390462805733596279690076656763624249

n2 = 26325215018784165663958487526715385161171636566916698114816183716597566424675870012796860473421390775180027083457908584461525282815469520282303059318923930531826588673345113634118988713179894971211405380241575065877886390347877768297280022387015195069836149198306647472534681286406136303674462323742151285361538383784282113898065157278366533587767199303585208673225974716800760227497569577072903884939422787710986913747191378087554442395968729847569180921093186599977266346501947184849099856506537976370069200813758143237937721729073822639191799709052936074831322440705620902220824412476988222346922869104007199777561

n3 = 23013589835547680503802140462487647716102548445081685245087901486321520435018899614072711065158868927754813316329675676910885474767916372370942795565358071859270832973837949423193707764788999822539648518439967218163608118921979697363190728350735745938069012584523314223346479156208977445194408267152808800890485882602068876756801123087623323707553203656108124651989136578687688847505350883163751096338640206246619001851586459510648241545637475283654557530338836698680934504086346810521919864048046078444168117563048636886066060497385368685340990757248020960409380316695810483273153565980791846594355984630591111120973

# c1 = 330
# c2 = 34
# c3 = 419
# n1 = 377
# n2 = 391
# n3 = 589

e = 3

c = [c1, c2, c3]
n = [n1, n2, n3]

N = n1 * n2 * n3

y = [0,0,0]
z = [0,0,0]
for i in range(3):
    y[i] = N // n[i]
    assert y[i] * n[i] == N
    z[i] = mod_inverse(y[i], n[i])

x = 0
for i in range(3):
    x += c[i] * y[i] * z[i]
x %= N

plain = find_n_root(x, e)
print(plain)

for i in range(3):
    assert (plain ** e) % n[i] == c[i]

plain = str(plain)

ans = ""
cur = ""
for ch in plain:
    cur += ch
    if int(cur) > 32:
        ans += chr(int(cur))
        cur = ""

print(ans)
